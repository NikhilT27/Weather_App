[{"/home/nikhilt27/Nikhil/Weather App/client/src/App.js":"1","/home/nikhilt27/Nikhil/Weather App/client/src/reportWebVitals.js":"2","/home/nikhilt27/Nikhil/Weather App/client/src/index.js":"3","/home/nikhilt27/Nikhil/Weather App/client/src/components/NavBar.js":"4","/home/nikhilt27/Nikhil/Weather App/client/src/components/Footer.js":"5","/home/nikhilt27/Nikhil/Weather App/client/src/components/IntroPage.js":"6","/home/nikhilt27/Nikhil/Weather App/client/src/features/location/Location.js":"7","/home/nikhilt27/Nikhil/Weather App/client/src/features/location/locationSlice.js":"8","/home/nikhilt27/Nikhil/Weather App/client/src/app/store.js":"9"},{"size":1118,"mtime":1608060081101,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1607763065485,"results":"12","hashOfConfig":"11"},{"size":620,"mtime":1607952674561,"results":"13","hashOfConfig":"11"},{"size":200,"mtime":1607878806790,"results":"14","hashOfConfig":"11"},{"size":163,"mtime":1607875533764,"results":"15","hashOfConfig":"11"},{"size":3230,"mtime":1610181094642,"results":"16","hashOfConfig":"11"},{"size":1270,"mtime":1608055755514,"results":"17","hashOfConfig":"11"},{"size":475,"mtime":1608007135280,"results":"18","hashOfConfig":"11"},{"size":204,"mtime":1607939100191,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"dpmacb",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/nikhilt27/Nikhil/Weather App/client/src/App.js",["46","47","48","49","50","51"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport useSWR from \"swr\";\n\nimport NavBar from \"./components/NavBar\";\nimport Footer from \"./components/Footer\";\nimport IntroPage from \"./components/IntroPage\";\nimport Location from \"./features/location/Location\";\n\nfunction App() {\n  // const [weatherDetail, setWeatherDetail] = useState({});\n\n  // useEffect(() => {\n  //   axios\n  //     .post(\"http://localhost:5000/postLocation\", {\n  //       location: \"Nagpur\",\n  //       lat: 33.441792,\n  //       lon: -94.037689,\n  //     })\n  //     .then((response) => setWeatherDetail(response.data));\n  // }, []);\n\n  // console.log(weatherDetail);\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <div className=\"App-body\">\n        <IntroPage />\n        <Location />\n      </div>\n      <div className=\"demo1\">\n        {/* <div className=\"demo\">asdasdasd</div>\n        <div className=\"demo\">asdasdasd</div>\n        <div className=\"demo\">asdasdasd</div> */}\n      </div>\n\n      {/* <Footer /> */}\n    </div>\n  );\n}\n\nexport default App;\n",["52","53"],"/home/nikhilt27/Nikhil/Weather App/client/src/reportWebVitals.js",[],["54","55"],"/home/nikhilt27/Nikhil/Weather App/client/src/index.js",[],["56","57"],"/home/nikhilt27/Nikhil/Weather App/client/src/components/NavBar.js",[],"/home/nikhilt27/Nikhil/Weather App/client/src/components/Footer.js",[],["58","59"],"/home/nikhilt27/Nikhil/Weather App/client/src/components/IntroPage.js",["60","61","62"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\n\nimport { selectLocationData } from \"../features/location/locationSlice\";\nimport IntroImg from \"../pics/intro.jpg\";\n\nexport default function IntroPage() {\n  let date = new Date();\n  const locationData = useSelector(selectLocationData);\n  const [weatherDetail, setWeatherDetail] = useState({});\n\n  useEffect(() => {\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n    try {\n      axios\n        .post(\"/postLocation\", locationData)\n        .then((response) => setWeatherDetail(response.data));\n    } catch (error) {\n      console.log(error);\n    }\n\n    console.log(locationData);\n    console.log(weatherDetail);\n\n    return () => {\n      source.cancel();\n    };\n  }, [locationData]);\n\n  return (\n    <div className=\"IntroPage\">\n      <div className=\"IntroPage-image\">\n        <img\n          src={IntroImg}\n          alt=\"Girl in a jacket\"\n          width=\"450px\"\n          height=\"auto\"\n        />\n      </div>\n      <div className=\"IntroPage-currentCity-Box\">\n        {locationData.location && weatherDetail ? (\n          <div className=\"IntroPage-currentCity-data\">\n            <div className=\"timezone-text\">{locationData.location}</div>\n            <div className=\"date-text\">\n              {new Date(weatherDetail.current.dt * 1000).toLocaleString()}\n            </div>\n            <div className=\"timezone-text\">{weatherDetail.timezone}</div>\n            <div className=\"degree-text\">{weatherDetail.current.temp} °C</div>\n            <div className=\"feels-text\">\n              {weatherDetail.current.feels_like} °C\n              {weatherDetail.current.weather.map((each_data) => {\n                return (\n                  <div key={each_data.id}>\n                    <div className=\"capitalize-text\">\n                      {each_data.description}\n                    </div>\n                    <img\n                      src={`http://openweathermap.org/img/wn/${each_data.icon}@2x.png`}\n                    ></img>\n                  </div>\n                );\n              })}\n            </div>\n            <div className=\"weather-more-detail\">\n              <div className=\"detail-data\">\n                Visibility: {weatherDetail.current.visibility / 1000}km\n              </div>\n              <div className=\"detail-data\">{weatherDetail.current.clouds}</div>\n              <div className=\"detail-data\">\n                {weatherDetail.current.wind_deg}\n                {weatherDetail.current.wind_speed}\n              </div>\n              <div className=\"detail-data\">\n                Pressure: {weatherDetail.current.pressure} hPa\n              </div>\n              <div className=\"detail-data\">\n                Humidity: {weatherDetail.current.humidity} %\n              </div>\n              <div className=\"detail-data\">\n                Dew Point: {weatherDetail.current.dew_point}°C\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <div className=\"exclamation-mark\">!!</div>\n            <div className=\"please-select-city\">Please select city</div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","/home/nikhilt27/Nikhil/Weather App/client/src/features/location/Location.js",["63","64"],"import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { changeLocation, selectLocationData } from \"./locationSlice\";\nimport IndianCities from \"../../data/India.json\";\n\nexport default function Location() {\n  const locationData = useSelector(selectLocationData);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"Location\">\n      <div>\n        <div className=\"select-major-city\">Select One City</div>\n        <div className=\"Location-scroll\">\n          <div className=\"each-city-data\">\n            {IndianCities.map((data) => {\n              return (\n                <div key={data.city + 123} className=\"each-city\">\n                  <button\n                    className=\"each-city-button\"\n                    onClick={() => {\n                      dispatch(\n                        changeLocation({\n                          location: data.city,\n                          lat: data.lat,\n                          lon: data.lng,\n                        })\n                      );\n                    }}\n                  >\n                    {data.city}\n                  </button>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/nikhilt27/Nikhil/Weather App/client/src/features/location/locationSlice.js",[],["65","66"],"/home/nikhilt27/Nikhil/Weather App/client/src/app/store.js",[],{"ruleId":"67","severity":1,"message":"68","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":12},{"ruleId":"67","severity":1,"message":"71","line":3,"column":17,"nodeType":"69","messageId":"70","endLine":3,"endColumn":25},{"ruleId":"67","severity":1,"message":"72","line":3,"column":27,"nodeType":"69","messageId":"70","endLine":3,"endColumn":36},{"ruleId":"67","severity":1,"message":"73","line":4,"column":8,"nodeType":"69","messageId":"70","endLine":4,"endColumn":13},{"ruleId":"67","severity":1,"message":"74","line":5,"column":8,"nodeType":"69","messageId":"70","endLine":5,"endColumn":14},{"ruleId":"67","severity":1,"message":"75","line":8,"column":8,"nodeType":"69","messageId":"70","endLine":8,"endColumn":14},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"76","replacedBy":"80"},{"ruleId":"78","replacedBy":"81"},{"ruleId":"76","replacedBy":"82"},{"ruleId":"78","replacedBy":"83"},{"ruleId":"76","replacedBy":"84"},{"ruleId":"78","replacedBy":"85"},{"ruleId":"67","severity":1,"message":"86","line":9,"column":7,"nodeType":"69","messageId":"70","endLine":9,"endColumn":11},{"ruleId":"87","severity":1,"message":"88","line":30,"column":6,"nodeType":"89","endLine":30,"endColumn":20,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":59,"column":21,"nodeType":"93","endLine":61,"endColumn":22},{"ruleId":"67","severity":1,"message":"71","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"67","severity":1,"message":"94","line":8,"column":9,"nodeType":"69","messageId":"70","endLine":8,"endColumn":21},{"ruleId":"76","replacedBy":"95"},{"ruleId":"78","replacedBy":"96"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'useSWR' is defined but never used.","'Footer' is defined but never used.","no-native-reassign",["97"],"no-negated-in-lhs",["98"],["97"],["98"],["97"],["98"],["97"],["98"],"'date' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'weatherDetail'. Either include it or remove the dependency array.","ArrayExpression",["99"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'locationData' is assigned a value but never used.",["97"],["98"],"no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},"Update the dependencies array to be: [locationData, weatherDetail]",{"range":"102","text":"103"},[823,837],"[locationData, weatherDetail]"]